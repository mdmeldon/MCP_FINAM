"""
–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–æ—Ä—Ç—Ñ–µ–ª—è - Sunburst –¥–∏–∞–≥—Ä–∞–º–º–∞.
"""

import plotly.express as px
import plotly.graph_objects as go
import pandas as pd
from typing import List, Dict, Any
from .utils import get_sector_by_ticker, safe_float, format_currency, SECTOR_COLORS


def create_portfolio_sunburst(positions: List[Dict[str, Any]]) -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç Sunburst –¥–∏–∞–≥—Ä–∞–º–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–æ–≤ –ø–æ —Å–µ–∫—Ç–æ—Ä–∞–º —ç–∫–æ–Ω–æ–º–∏–∫–∏.

    –î–∏–∞–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç:
    - –í–Ω–µ—à–Ω–µ–µ –∫–æ–ª—å—Ü–æ: —Å–µ–∫—Ç–æ—Ä—ã —ç–∫–æ–Ω–æ–º–∏–∫–∏
    - –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –∫–æ–ª—å—Ü–æ: –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    - –†–∞–∑–º–µ—Ä —Å–µ–≥–º–µ–Ω—Ç–∞: —Ç–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–∏
    - –¶–≤–µ—Ç: –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–∏ (–∑–µ–ª–µ–Ω—ã–π - –ø—Ä–∏–±—ã–ª—å, –∫—Ä–∞—Å–Ω—ã–π - —É–±—ã—Ç–æ–∫)

    Args:
        positions: –°–ø–∏—Å–æ–∫ –ø–æ–∑–∏—Ü–∏–π –∏–∑ AccountDTO.positions

    Returns:
        JSON-—Å—Ç—Ä–æ–∫–∞ —Å –≥—Ä–∞—Ñ–∏–∫–æ–º Plotly –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Streamlit

    Example:
        >>> positions = [
        ...     {
        ...         "symbol": "SBER@TQBR",
        ...         "quantity": {"value": "100"},
        ...         "current_price": {"value": "250.5"},
        ...         "unrealized_pnl": {"value": "1500"}
        ...     }
        ... ]
        >>> fig_json = create_portfolio_sunburst(positions)
    """
    if not positions:
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        fig = px.sunburst(
            pd.DataFrame([{"–°–µ–∫—Ç–æ—Ä": "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", "value": 1}]),
            path=["–°–µ–∫—Ç–æ—Ä"],
            values="value",
            title="–ü–æ—Ä—Ç—Ñ–µ–ª—å –ø—É—Å—Ç"
        )
        return fig.to_json()

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ DataFrame —Å –∏–µ—Ä–∞—Ä—Ö–∏–µ–π
    data = []
    for pos in positions:
        symbol = pos.get("symbol", "UNKNOWN")
        ticker = symbol.split("@")[0]
        sector = get_sector_by_ticker(symbol)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        quantity = safe_float(pos.get("quantity", {}))
        current_price = safe_float(pos.get("current_price", {}))
        unrealized_pnl = safe_float(pos.get("unrealized_pnl", {}))

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
        current_value = current_price * quantity

        if current_value > 0:
            pnl_percent = (unrealized_pnl / (current_value - unrealized_pnl)) * \
                100 if (current_value - unrealized_pnl) != 0 else 0

            data.append({
                "–°–µ–∫—Ç–æ—Ä": sector,
                "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç": ticker,
                "–°—Ç–æ–∏–º–æ—Å—Ç—å": current_value,
                "–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å": pnl_percent,
                "PnL": unrealized_pnl,
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": quantity,
                "–¶–µ–Ω–∞": current_price,
            })

    if not data:
        # –ï—Å–ª–∏ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç
        fig = px.sunburst(
            pd.DataFrame([{"–°–µ–∫—Ç–æ—Ä": "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π", "value": 1}]),
            path=["–°–µ–∫—Ç–æ—Ä"],
            values="value",
            title="–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π"
        )
        return fig.to_json()

    df = pd.DataFrame(data)

    # –°–æ–∑–¥–∞–µ–º Sunburst –¥–∏–∞–≥—Ä–∞–º–º—É —Å —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º–æ–π –¥–ª—è —Å–µ–∫—Ç–æ—Ä–æ–≤
    fig = px.sunburst(
        df,
        path=["–°–µ–∫—Ç–æ—Ä", "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç"],
        values="–°—Ç–æ–∏–º–æ—Å—Ç—å",
        color="–°–µ–∫—Ç–æ—Ä",
        color_discrete_map=SECTOR_COLORS,
        hover_data={
            "–°—Ç–æ–∏–º–æ—Å—Ç—å": ":,.0f",
            "–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å": ":.2f",
            "PnL": ":,.0f",
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": ":,.0f",
            "–¶–µ–Ω–∞": ":,.2f",
        },
        title="üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è –ø–æ —Å–µ–∫—Ç–æ—Ä–∞–º —ç–∫–æ–Ω–æ–º–∏–∫–∏"
    )

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
    fig.update_traces(
        textinfo="label+percent parent",
        hovertemplate="<b>%{label}</b><br>" +
                      "–°—Ç–æ–∏–º–æ—Å—Ç—å: %{value:,.0f} ‚ÇΩ<br>" +
                      "–î–æ–ª—è: %{percentParent:.1%}<br>" +
                      "–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: %{customdata[1]:.2f}%<br>" +
                      "P&L: %{customdata[2]:,.0f} ‚ÇΩ<br>" +
                      "<extra></extra>",
        marker=dict(
            line=dict(color='white', width=2)
        )
    )

    fig.update_layout(
        margin=dict(t=80, l=0, r=0, b=0),
        height=650,
        font=dict(size=13),
        title=dict(
            text="üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è –ø–æ —Å–µ–∫—Ç–æ—Ä–∞–º —ç–∫–æ–Ω–æ–º–∏–∫–∏",
            x=0.5,
            xanchor='center',
            font=dict(size=18, color='#1f77b4')
        )
    )

    return fig.to_json()
